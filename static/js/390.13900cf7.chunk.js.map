{"version":3,"file":"static/js/390.13900cf7.chunk.js","mappings":"+NAsEA,UAlEa,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAEA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAuBA,OAnBAC,EAAAA,EAAAA,YAAU,WAAM,wCAEd,8GAGuBC,EAAAA,EAAAA,IAAWR,GAHlC,OAGUS,EAHV,OAIIL,EAAWK,GAJf,gDAMIH,EAAS,EAAD,IANZ,yBAQII,QAAQC,IAAI,mBARhB,6EAFc,0DAcdC,EAED,GAAE,CAACZ,IAEJU,QAAQC,IAAIR,IAEV,gCACGE,IAAS,SAAC,KAAD,CAAUQ,GAAG,UAAUC,SAAO,IAEpB,IAAnBX,EAAQY,QACP,oEAEA,wBACGZ,EAAQa,KAAI,SAAAC,GAAM,OACjB,2BACE,qCAAaA,EAAOC,WACpB,uBAAID,EAAOE,YAFJF,EAAOG,GADC,QA6B5B,C,4MCvDM,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,sGACkBC,IAAAA,IAAU,qBAD5B,uBACGb,EADH,EACGA,KADH,kBAEEA,EAAKc,SAFP,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,yFACkBH,IAAAA,IAAA,+BAAkCG,IADpD,uBACGhB,EADH,EACGA,KADH,kBAEEA,EAAKc,SAFP,kEAKA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA+B1B,GAA/B,yFACkBsB,IAAAA,IAAA,iBAAoBtB,IADtC,uBACGS,EADH,EACGA,KADH,kBAGEA,GAHF,kEAMA,SAAekB,EAAtB,+CAAO,OAAP,oBAAO,WAA6B3B,GAA7B,yFACkBsB,IAAAA,IAAA,iBAAoBtB,EAApB,aADlB,uBACGS,EADH,EACGA,KADH,kBAEEA,EAAKmB,MAFP,kEAMA,SAAepB,EAAtB,kC,aAAO,O,oBAAA,WAA0BR,GAA1B,yFACkBsB,IAAAA,IAAA,iBAAoBtB,EAApB,aADlB,uBACGS,EADH,EACGA,KADH,kBAEEA,EAAKc,SAFP,kEAhCPD,IAAAA,SAAAA,QAAyB,+BAEzBA,IAAAA,SAAAA,OAAwB,CACtBO,QAJc,mCAKdC,SAAU,QAEVC,KAAM,EACNC,SAAU,G","sources":["Pages/Reviews/Reviews.jsx","Services/movie_api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { Navigate, useParams } from 'react-router-dom';\nimport { getReviews } from '../../Services/movie_api';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  //   const [queryMessage, setQueryMessage] = useState('');\n  const [error, setError] = useState(null);\n\n  //   console.log(movieId);\n\n  useEffect(() => {\n    // getSearchMovie(queryMessage).then(setSearchFilms);\n    async function fetchReviews() {\n      // setLoading(true);\n      try {\n        const data = await getReviews(movieId);\n        setReviews(data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        console.log('finally Reviews');\n        // setLoading(false);\n      }\n    }\n    fetchReviews();\n    //\n  }, [movieId]);\n\n  console.log(reviews);\n  return (\n    <>\n      {error && <Navigate to=\"/movies\" replace />}\n\n      {reviews.length === 0 ? (\n        <p>We don`t have any reviews on this movie</p>\n      ) : (\n        <ul>\n          {reviews.map(review => (\n            <li key={review.id}>\n              <h5>Author: {review.author}</h5>\n              <p>{review.content}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n      {/* <Searchbar onOnSubmit={setQueryMessage} />\n\n      {searchFilms && (\n        <ul>\n          {searchFilms.map(searchFilm => (\n            <li key={searchFilm.id}>\n              <NavLink\n                to={`/movies/${searchFilm.id}`}\n                // to={{\n                //   pathname: `${url}/${searchFilm.id}`,\n                //   state: { from: location },\n                // }}\n              >\n                {searchFilm.title ?? searchFilm.original_name}\n              </NavLink>\n            </li>\n          ))}\n        </ul>\n      )} */}\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY = '56df3cdaf4656bc2a0c7d7aaff77ded0';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: 'en-US',\n  // include_adult: 'false',\n  page: 1,\n  per_page: 12,\n};\n\nexport async function getPopularFilmsHome() {\n  const { data } = await axios.get('/trending/all/day');\n  return data.results;\n}\n\nexport async function getSearchMovie(queryMessage) {\n  const { data } = await axios.get(`/search/movie?&query=${queryMessage}`);\n  return data.results;\n}\n\nexport async function getMovieDetiasl(movieId) {\n  const { data } = await axios.get(`/movie/${movieId}`);\n  // console.log(data);\n  return data;\n}\n\nexport async function getActorsCast(movieId) {\n  const { data } = await axios.get(`/movie/${movieId}/credits`);\n  return data.cast;\n  // https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>&language=en-US\n}\n\nexport async function getReviews(movieId) {\n  const { data } = await axios.get(`/movie/${movieId}/reviews`);\n  return data.results;\n  // https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1\n}\n\n// Ключ API(v3 auth)\n// 56df3cdaf4656bc2a0c7d7aaff77ded0\n\n// Пример API - запроса\n// https://api.themoviedb.org/3/movie/550?api_key=56df3cdaf4656bc2a0c7d7aaff77ded0\n\n// Ключ доступа к API (v4 auth)\n// eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI1NmRmM2NkYWY0NjU2YmMyYTBjN2Q3YWFmZjc3ZGVkMCIsInN1YiI6IjYyZWMxYzkwYjNlNjI3MDA2MTYzZDdjNCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.rQDv3wcx0DLSGrljquyK1IugZWdu16n-_CZhTiG7sZQ\n"],"names":["movieId","useParams","useState","reviews","setReviews","error","setError","useEffect","getReviews","data","console","log","fetchReviews","to","replace","length","map","review","author","content","id","getPopularFilmsHome","axios","results","getSearchMovie","queryMessage","getMovieDetiasl","getActorsCast","cast","api_key","language","page","per_page"],"sourceRoot":""}