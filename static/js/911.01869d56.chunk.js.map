{"version":3,"file":"static/js/911.01869d56.chunk.js","mappings":"0PAAO,SAASA,EAAT,GAA0C,IAAZC,EAAW,EAAXA,QACnC,OACE,4BACE,gBACEC,IAAG,yCAAoCD,EAAQE,aAC/CC,IAAKH,EAAQI,SAEf,0BACGJ,EAAQI,MADX,IAEGJ,EAAQK,cAAgBL,EAAQK,aAAaC,MAAM,KAAK,GAF3D,QAIA,wCAAgBN,EAAQO,WAAxB,QACA,sCACA,uBAAIP,EAAQQ,YACZ,mCAECR,EAAQS,QACPT,EAAQS,OAAOC,KAAI,SAAAC,GAAC,OAAI,4BAAoBA,EAAEC,KAAtB,MAAWD,EAAEC,KAAjB,MAG3B,C,wBCiDD,EA1DqB,WAAO,IAAD,QACnBC,GAAWC,EAAAA,EAAAA,MACTC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOjB,EAAP,KAAgBkB,EAAhB,KACA,GAA0BD,EAAAA,EAAAA,UAAS,MAAnC,eAAOE,EAAP,KAAcC,EAAd,MAEAC,EAAAA,EAAAA,YAAU,WAAM,wCAEd,8GAGuBC,EAAAA,EAAAA,IAAgBP,GAHvC,OAGUQ,EAHV,OAIIL,EAAWK,GAJf,gDAMIH,EAAS,EAAD,IANZ,yBAQII,QAAQC,IAAI,wBARhB,6EAFc,0DAcdC,EAED,GAAE,CAACX,IAEJ,IAAMY,EAAU,iBAAGd,QAAH,IAAGA,GAAH,UAAGA,EAAUe,aAAb,aAAG,EAAiBC,YAApB,YAEhB,OACE,gCACGV,IAAS,SAAC,KAAD,CAAUW,GAAG,UAAUC,SAAO,KACxC,SAAC,KAAD,CAASD,GAAIH,EAAb,sBACA,SAAC5B,EAAD,CAAoBC,QAASA,KAE7B,2BACE,yBACE,SAAC,KAAD,CACE8B,GAAE,kBAAaf,EAAb,SACFa,MAAO,CAAEC,KAAI,OAAEhB,QAAF,IAAEA,GAAF,UAAEA,EAAUe,aAAZ,aAAE,EAAiBC,MAFlC,qBAOF,yBACE,SAAC,KAAD,CACEC,GAAE,kBAAaf,EAAb,YACFa,MAAO,CAAEC,KAAI,OAAEhB,QAAF,IAAEA,GAAF,UAAEA,EAAUe,aAAZ,aAAE,EAAiBC,MAFlC,2BASJ,0BACE,SAAC,KAAD,QAIP,C,4MCtDM,SAAeG,IAAtB,4CAAO,OAAP,oBAAO,sGACkBC,IAAAA,IAAU,qBAD5B,uBACGV,EADH,EACGA,KADH,kBAEEA,EAAKW,SAFP,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,yFACkBH,IAAAA,IAAA,+BAAkCG,IADpD,uBACGb,EADH,EACGA,KADH,kBAEEA,EAAKW,SAFP,kEAKA,SAAeZ,EAAtB,+CAAO,OAAP,oBAAO,WAA+BP,GAA/B,yFACkBkB,IAAAA,IAAA,iBAAoBlB,IADtC,uBACGQ,EADH,EACGA,KADH,kBAGEA,GAHF,kEAMA,SAAec,EAAtB,+CAAO,OAAP,oBAAO,WAA6BtB,GAA7B,yFACkBkB,IAAAA,IAAA,iBAAoBlB,EAApB,aADlB,uBACGQ,EADH,EACGA,KADH,kBAEEA,EAAKe,MAFP,kEAMA,SAAeC,EAAtB,kC,aAAO,O,oBAAA,WAA0BxB,GAA1B,yFACkBkB,IAAAA,IAAA,iBAAoBlB,EAApB,aADlB,uBACGQ,EADH,EACGA,KADH,kBAEEA,EAAKW,SAFP,kEAhCPD,IAAAA,SAAAA,QAAyB,+BAEzBA,IAAAA,SAAAA,OAAwB,CACtBO,QAJc,mCAKdC,SAAU,QAEVC,KAAM,EACNC,SAAU,G","sources":["Pages/MovieDetails/MovieDetailsRender.jsx","Pages/MovieDetails/MovieDetails.jsx","Services/movie_api.js"],"sourcesContent":["export function MovieDetailsRender({ details }) {\n  return (\n    <div>\n      <img\n        src={`https://image.tmdb.org/t/p/w400${details.poster_path}`}\n        alt={details.title}\n      />\n      <h1>\n        {details.title}(\n        {details.release_date && details.release_date.split('-')[0]})\n      </h1>\n      <p>User Score: {details.vote_count}%</p>\n      <h3>Overwiev</h3>\n      <p>{details.overview}</p>\n      <h3>Genres</h3>\n\n      {details.genres &&\n        details.genres.map(g => <span key={g.name}>{g.name} </span>)}\n    </div>\n  );\n}\n","import {\n  Navigate,\n  useParams,\n  Outlet,\n  NavLink,\n  useLocation,\n} from 'react-router-dom';\nimport { MovieDetailsRender } from './MovieDetailsRender';\nimport { useState, useEffect } from 'react';\nimport { getMovieDetiasl } from '../../Services/movie_api';\n\nconst MovieDetails = () => {\n  const location = useLocation();\n  const { movieId } = useParams();\n  const [details, setDetails] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    // getSearchMovie(queryMessage).then(setSearchFilms);\n    async function getDetial() {\n      // setLoading(true);\n      try {\n        const data = await getMovieDetiasl(movieId);\n        setDetails(data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        console.log('finally MovieDetails');\n        // setLoading(false);\n      }\n    }\n    getDetial();\n    //\n  }, [movieId]);\n\n  const goBackLink = location?.state?.from ?? `/`;\n\n  return (\n    <>\n      {error && <Navigate to=\"/movies\" replace />}\n      <NavLink to={goBackLink}>Go Back</NavLink>\n      <MovieDetailsRender details={details} />\n\n      <ul>\n        <li>\n          <NavLink\n            to={`/movies/${movieId}/cast`}\n            state={{ from: location?.state?.from }}\n          >\n            Cast\n          </NavLink>\n        </li>\n        <li>\n          <NavLink\n            to={`/movies/${movieId}/reviews`}\n            state={{ from: location?.state?.from }}\n          >\n            Reviews\n          </NavLink>\n        </li>\n      </ul>\n\n      <div>\n        <Outlet />\n      </div>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst API_KEY = '56df3cdaf4656bc2a0c7d7aaff77ded0';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: 'en-US',\n  // include_adult: 'false',\n  page: 1,\n  per_page: 12,\n};\n\nexport async function getPopularFilmsHome() {\n  const { data } = await axios.get('/trending/all/day');\n  return data.results;\n}\n\nexport async function getSearchMovie(queryMessage) {\n  const { data } = await axios.get(`/search/movie?&query=${queryMessage}`);\n  return data.results;\n}\n\nexport async function getMovieDetiasl(movieId) {\n  const { data } = await axios.get(`/movie/${movieId}`);\n  // console.log(data);\n  return data;\n}\n\nexport async function getActorsCast(movieId) {\n  const { data } = await axios.get(`/movie/${movieId}/credits`);\n  return data.cast;\n  // https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>&language=en-US\n}\n\nexport async function getReviews(movieId) {\n  const { data } = await axios.get(`/movie/${movieId}/reviews`);\n  return data.results;\n  // https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1\n}\n\n// Ключ API(v3 auth)\n// 56df3cdaf4656bc2a0c7d7aaff77ded0\n\n// Пример API - запроса\n// https://api.themoviedb.org/3/movie/550?api_key=56df3cdaf4656bc2a0c7d7aaff77ded0\n\n// Ключ доступа к API (v4 auth)\n// eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI1NmRmM2NkYWY0NjU2YmMyYTBjN2Q3YWFmZjc3ZGVkMCIsInN1YiI6IjYyZWMxYzkwYjNlNjI3MDA2MTYzZDdjNCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.rQDv3wcx0DLSGrljquyK1IugZWdu16n-_CZhTiG7sZQ\n"],"names":["MovieDetailsRender","details","src","poster_path","alt","title","release_date","split","vote_count","overview","genres","map","g","name","location","useLocation","movieId","useParams","useState","setDetails","error","setError","useEffect","getMovieDetiasl","data","console","log","getDetial","goBackLink","state","from","to","replace","getPopularFilmsHome","axios","results","getSearchMovie","queryMessage","getActorsCast","cast","getReviews","api_key","language","page","per_page"],"sourceRoot":""}